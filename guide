# 1. Configure Git with your user info
git config --global user.name "Your Name"       # Set your Git username
git config --global user.email "you@example.com" # Set your Git email

# 2. Create a project folder and navigate into it
mkdir git-commands-repo
cd git-commands-repo

# 3. Initialize the folder as a Git repository
git init  # Creates a .git folder to track version history

# 4. Create a README file
echo "# Git Commands Repository" >> README.md

# 5. Optional: Create a .gitignore file to exclude unwanted files
touch .gitignore
# Example content to add inside .gitignore:
# node_modules/
# *.log
# .DS_Store

# 6. Stage all files to prepare for commit
git add .  # Add all files in the folder to the staging area

# 7. Commit the staged files with a message
git commit -m "Initial commit"  # Save changes to the local repository

# 8. Create a new repository on GitHub (done via browser) and copy its URL
# Example HTTPS URL: https://github.com/username/git-commands-repo.git

# 9. Link local repo to GitHub remote
git remote add origin https://github.com/username/git-commands-repo.git

# 10. Verify the remote repository
git remote -v  # Shows the linked remote URL

# 11. Push local commits to GitHub
git branch -M main  # Rename branch to 'main' if necessary
git push -u origin main  # Push commits to the remote repository

# 12. Workflow for future updates
# After making changes to files:
git add .                        # Stage changes
git commit -m "Describe changes" # Commit changes
git push                         # Push updates to GitHub

# Optional: Pull updates if collaborating
git pull origin main              # Fetch and merge changes from remote
